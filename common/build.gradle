plugins {
}

version = '0.0.1'

repositories {
    mavenCentral()
}

bootJar.enabled = false

dependencies {
    implementation 'org.hibernate:hibernate-spatial:6.2.2.Final'
    implementation 'org.locationtech.jts:jts-core:1.18.2'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.19.3'

    //spatial
    implementation 'org.hibernate:hibernate-spatial:6.2.2.Final'
    implementation 'org.locationtech.jts:jts-core:1.18.2'

    implementation platform('org.springframework.cloud:spring-cloud-dependencies:2022.0.0')
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}


def querydslSrcDir = 'src/main/generated'
sourceSets {
    main {
        java {
            srcDirs += [ querydslSrcDir ]
        }
    }
}

compileJava {
    options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

clean {
    delete file(querydslSrcDir)
}